#define _CRT_SECURE_NO_WARNINGS 1
#include<stdio.h>
#include<string.h>
void bubblesort(int count[100], char arr[100][20],int sz)
{
    int i = 0;
    for (i = 0; i < sz - 1; i++)
    {
        int j = 0;
        int flag = 1;
        for (j = 0; j < sz - 1 - i; j++)
        {
            if (count[j] < count[j + 1])
            {
                int ret = 0;//对count数组进行换位的同时同步的将arr数据进行换位
                ret = count[j];
                count[j] = count[j + 1];
                count[j + 1] = ret;
                char a[20] = "a";
                strcpy(a, arr[j]);
                strcpy(arr[j], arr[j+1]);
                strcpy(arr[j + 1],a);
                flag = 0;

            }
        }
        if (flag == 1)
        {
            break;
        }
    }
}
int main()
 {
    char arr[100][20] = { '0' };
    int i = 0, j = 0, k = 0;
    int count[100] = {0};
    for (i = 0; i < 100; i++)//初始化
    {
        count[i] = 0;
    }
    i = 0;
    while (1)
    {
        scanf("%s", &arr[i]);//输入
        if (arr[i][0] == '0')
        {
            break;
        }
        i++;
    }
    while (arr[k][0] != 0)
    {
        if (arr[k][0] == '0')//计数
        {
            k++;
            continue;
        }
        count[k]++;
        j = k + 1;
        while (arr[j][0] != 0)
        {
            if (strcmp(arr[k], arr[j]) == 0)
            {
                arr[j][0] = '0';
                count[k]++;
            }
            j++;
        }
        k++;
    }
    bubblesort(count, arr, 100);//用冒泡排序进行排序并换位
    k = 0;
    while (arr[k][0] != '0')
    {
        printf("%d %s\n", count[k], arr[k]);
        k++;
    }
    return 0;
 }


/*
     测试数据：
good
bad
bad
cute
how
good
good
0


3 good
2 bad
1 cute
1 how
*/
